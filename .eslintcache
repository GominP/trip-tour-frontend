[{"D:\\project\\Test\\hello-web\\src\\Guide\\CreateTrip.js":"1","D:\\project\\Test\\hello-web\\src\\NavBar\\NavbarHead.js":"2","D:\\project\\Test\\hello-web\\src\\Guide\\ChooseJob.js":"3"},{"size":14689,"mtime":1606816106481,"results":"4","hashOfConfig":"5"},{"size":15204,"mtime":1606816080429,"results":"6","hashOfConfig":"5"},{"size":4393,"mtime":1606816521196,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"28oig4",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\project\\Test\\hello-web\\src\\Guide\\CreateTrip.js",["15","16","17","18","19","20","21","22"],"D:\\project\\Test\\hello-web\\src\\NavBar\\NavbarHead.js",[],"D:\\project\\Test\\hello-web\\src\\Guide\\ChooseJob.js",["23","24","25","26"],"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBarGuide from '../NavBar/NavBarGuide.js';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport slide1 from '../img/h1.jpg';\r\nimport slide2 from '../img/h2.jpg';\r\nimport slide3 from '../img/h3.jpg';\r\n\r\n\r\n\r\nimport { Container, Col, Row, Carousel, Card, Form, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction ChooseJob() {\r\n  const params = useParams();\r\n\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  const cardImg = [\r\n    { img: slide1},\r\n    { img: slide2},\r\n    { img: slide3}\r\n\r\n];\r\n\r\n  const disabledDates = [new Date(2020,10,29),new Date(2020,10,27),new Date(2020,10,24)]\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NavBarGuide />\r\n      <Container style={{ marginTop: 80}}>\r\n        <Row className=\"\"  >\r\n            <Col sm={8}>\r\n              <Row>\r\n              <Card style={{ width: '40rem'}}>\r\n                <Carousel activeIndex={index} onSelect={handleSelect}>\r\n                    {\r\n                      cardImg.map(i => {\r\n                        return (\r\n                          <Carousel.Item>\r\n                          <img\r\n                            className=\"d-block w-100\"\r\n                            src={i.img}>\r\n                          </img>\r\n                          </Carousel.Item>\r\n                        )\r\n                      })\r\n                    }                \r\n                </Carousel>\r\n                <Card.Body>\r\n\r\n                  <Card.Text>\r\n                  <dl class=\"row\">\r\n                    <dt class=\"col-sm-3\">Name Trip</dt>\r\n                    <dd class=\"col-sm-9\">A description list is perfect for defining terms.</dd>\r\n\r\n                    <dt class=\"col-sm-3\">Detail</dt>\r\n                    <dd class=\"col-sm-9\">\r\n                      <p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p>\r\n                      <p>Donec id elit non mi porta gravida at eget metus.</p>\r\n                    </dd>\r\n\r\n                    <dt class=\"col-sm-3\">Province</dt>\r\n                    <dd class=\"col-sm-9\">Etiam porta sem malesuada magna mollis euismod.</dd>\r\n\r\n                    <dt class=\"col-sm-3 text-truncate\">Main activities</dt>\r\n                    <dd class=\"col-sm-9\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>\r\n\r\n                    <dt class=\"col-sm-3\">Price</dt>\r\n                    <dd class=\"col-sm-9\">\r\n                      <dl class=\"row\">\r\n                        <dd class=\"col-sm-8\">Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.</dd>\r\n                      </dl>\r\n                    </dd>\r\n                    <dt class=\"col-sm-3 text-truncate\">Maximum travelers</dt>\r\n                    <dd class=\"col-sm-9\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>\r\n\r\n                  </dl>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n            </Card> \r\n                \r\n                  \r\n                                \r\n              </Row>\r\n              <Row style={{ marginTop: 50 }}>\r\n              \r\n                  Photo Gallery\r\n                    \r\n              </Row>\r\n            </Col>\r\n\r\n            <Col sm={4}>\r\n                <Row>\r\n                <Calendar\r\n                  selectRange={true}\r\n                  tileDisabled={({ date }) => {\r\n                    for (const disabledDate of disabledDates) {\r\n                      if (\r\n                        disabledDate.getDate() === date.getDate() &&\r\n                        disabledDate.getMonth() === date.getMonth()\r\n                      ) {\r\n                        return true;\r\n                      }\r\n                    }\r\n                    return false;\r\n                  }}\r\n                />\r\n\r\n                </Row>\r\n                <Row className=\"justify-content-center\" style={{ marginTop: 40}}>\r\n                  <Button > Save Change</Button>\r\n\r\n                </Row>\r\n\r\n\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChooseJob;\r\n",{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":16},{"ruleId":"27","severity":1,"message":"31","line":3,"column":8,"nodeType":"29","messageId":"30","endLine":3,"endColumn":14},{"ruleId":"27","severity":1,"message":"32","line":4,"column":8,"nodeType":"29","messageId":"30","endLine":4,"endColumn":14},{"ruleId":"27","severity":1,"message":"33","line":5,"column":8,"nodeType":"29","messageId":"30","endLine":5,"endColumn":13},{"ruleId":"27","severity":1,"message":"34","line":13,"column":62,"nodeType":"29","messageId":"30","endLine":13,"endColumn":70},{"ruleId":"35","severity":1,"message":"36","line":15,"column":21,"nodeType":"37","messageId":"38","endLine":15,"endColumn":24},{"ruleId":"27","severity":1,"message":"39","line":52,"column":11,"nodeType":"29","messageId":"30","endLine":52,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":162,"column":12,"nodeType":"42","endLine":162,"endColumn":14,"suggestions":"43"},{"ruleId":"27","severity":1,"message":"44","line":5,"column":17,"nodeType":"29","messageId":"30","endLine":5,"endColumn":26},{"ruleId":"27","severity":1,"message":"45","line":16,"column":47,"nodeType":"29","messageId":"30","endLine":16,"endColumn":51},{"ruleId":"27","severity":1,"message":"46","line":20,"column":9,"nodeType":"29","messageId":"30","endLine":20,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":52,"column":27,"nodeType":"49","endLine":54,"endColumn":41},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'moment' is defined but never used.","'axios' is defined but never used.","'Carousel' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'fileHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axios'. Either include it or remove the dependency array.","ArrayExpression",["50"],"'useEffect' is defined but never used.","'Form' is defined but never used.","'params' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"51","fix":"52"},"Update the dependencies array to be: [axios]",{"range":"53","text":"54"},[4817,4819],"[axios]"]